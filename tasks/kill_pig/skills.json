{"gatherAndStoreWood": {"executable_code": "async function gatherAndStoreWood(bot) {\n  // Step 1: Find and mine 3 oak logs\n  await mineBlock(bot, \"oak_log\", 3);\n  bot.chat(\"Finished mining oak logs.\");\n\n  // Step 2: Go to the chest\n  const chestPosition = new Vec3(-14, -60, 2);\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n  bot.chat(\"Arrived at the chest.\");\n\n  // Step 3: Deposit the 3 oak logs into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"oak_log\": 3\n  });\n  bot.chat(\"Finished depositing oak logs into the chest.\");\n}\nawait gatherAndStoreWood(bot);", "code": "async function gatherAndStoreWood(bot) {\n  // Step 1: Find and mine 3 oak logs\n  await mineBlock(bot, \"oak_log\", 3);\n  bot.chat(\"Finished mining oak logs.\");\n\n  // Step 2: Go to the chest\n  const chestPosition = new Vec3(-14, -60, 2);\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n  bot.chat(\"Arrived at the chest.\");\n\n  // Step 3: Deposit the 3 oak logs into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"oak_log\": 3\n  });\n  bot.chat(\"Finished depositing oak logs into the chest.\");\n}"}, "craftAndStoreWoodPlanks": {"executable_code": "async function craftAndStoreWoodPlanks(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  // Move to the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n  // Open the chest and take 3 wood logs\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_log\": 3\n  });\n  // Craft 12 wood planks from the 3 wood logs\n  await craftItem(bot, \"oak_planks\", 3);\n  // Move to the chest again\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n  // Open the chest and deposit 12 wood planks\n  await depositItemIntoChest(bot, chestPosition, {\n    \"oak_planks\": 12\n  });\n}\nawait craftAndStoreWoodPlanks(bot);", "code": "async function craftAndStoreWoodPlanks(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  // Move to the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n  // Open the chest and take 3 wood logs\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_log\": 3\n  });\n  // Craft 12 wood planks from the 3 wood logs\n  await craftItem(bot, \"oak_planks\", 3);\n  // Move to the chest again\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n  // Open the chest and deposit 12 wood planks\n  await depositItemIntoChest(bot, chestPosition, {\n    \"oak_planks\": 12\n  });\n}"}, "craftAndStoreSticks": {"executable_code": "async function craftAndStoreSticks(bot) {\n  // Define the chest position\n  const chestPosition = new Vec3(-14, -60, 2);\n\n  // Check if there are enough oak planks in the inventory\n  const oakPlanks = bot.inventory.findInventoryItem(mcData.itemsByName[\"oak_planks\"].id);\n  if (!oakPlanks || oakPlanks.count < 2) {\n    // If not, get the required amount from the chest\n    await getItemFromChest(bot, chestPosition, {\n      \"oak_planks\": 2\n    });\n  }\n\n  // Craft 4 sticks using the oak planks\n  await craftItem(bot, \"stick\", 2);\n\n  // Deposit the crafted sticks into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"stick\": 4\n  });\n  bot.chat(\"Task completed: Crafted 4 sticks and placed them in the chest.\");\n}\nawait craftAndStoreSticks(bot);", "code": "async function craftAndStoreSticks(bot) {\n  // Define the chest position\n  const chestPosition = new Vec3(-14, -60, 2);\n\n  // Check if there are enough oak planks in the inventory\n  const oakPlanks = bot.inventory.findInventoryItem(mcData.itemsByName[\"oak_planks\"].id);\n  if (!oakPlanks || oakPlanks.count < 2) {\n    // If not, get the required amount from the chest\n    await getItemFromChest(bot, chestPosition, {\n      \"oak_planks\": 2\n    });\n  }\n\n  // Craft 4 sticks using the oak planks\n  await craftItem(bot, \"stick\", 2);\n\n  // Deposit the crafted sticks into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"stick\": 4\n  });\n  bot.chat(\"Task completed: Crafted 4 sticks and placed them in the chest.\");\n}"}, "craftAndPlaceCraftingTable": {"executable_code": "async function craftAndPlaceCraftingTable(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const itemsToGet = {\n    \"oak_planks\": 4\n  };\n\n  // Move to the chest and withdraw 4 oak planks\n  await getItemFromChest(bot, chestPosition, itemsToGet);\n\n  // Craft a crafting table\n  await craftItem(bot, \"crafting_table\", 1);\n\n  // Move to the position 1 block left to the chest\n  const placePosition = chestPosition.offset(-1, 0, 0);\n  await bot.pathfinder.goto(new GoalGetToBlock(placePosition.x, placePosition.y, placePosition.z));\n\n  // Place the crafting table on the ground\n  await placeItem(bot, \"crafting_table\", placePosition);\n}\nawait craftAndPlaceCraftingTable(bot);", "code": "async function craftAndPlaceCraftingTable(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const itemsToGet = {\n    \"oak_planks\": 4\n  };\n\n  // Move to the chest and withdraw 4 oak planks\n  await getItemFromChest(bot, chestPosition, itemsToGet);\n\n  // Craft a crafting table\n  await craftItem(bot, \"crafting_table\", 1);\n\n  // Move to the position 1 block left to the chest\n  const placePosition = chestPosition.offset(-1, 0, 0);\n  await bot.pathfinder.goto(new GoalGetToBlock(placePosition.x, placePosition.y, placePosition.z));\n\n  // Place the crafting table on the ground\n  await placeItem(bot, \"crafting_table\", placePosition);\n}"}, "craftAndStoreWoodenPickaxe": {"executable_code": "async function craftAndStoreWoodenPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  }).position;\n\n  // Step 1: Go to the chest and take 3 oak planks and 2 sticks\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_planks\": 3,\n    \"stick\": 2\n  });\n\n  // Step 2: Go to the crafting table\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTablePosition.x, craftingTablePosition.y, craftingTablePosition.z));\n\n  // Step 3: Craft a wooden pickaxe\n  await craftItem(bot, \"wooden_pickaxe\", 1);\n\n  // Step 4: Go back to the chest and deposit the wooden pickaxe\n  await depositItemIntoChest(bot, chestPosition, {\n    \"wooden_pickaxe\": 1\n  });\n}\nawait craftAndStoreWoodenPickaxe(bot);", "code": "async function craftAndStoreWoodenPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  }).position;\n\n  // Step 1: Go to the chest and take 3 oak planks and 2 sticks\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_planks\": 3,\n    \"stick\": 2\n  });\n\n  // Step 2: Go to the crafting table\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTablePosition.x, craftingTablePosition.y, craftingTablePosition.z));\n\n  // Step 3: Craft a wooden pickaxe\n  await craftItem(bot, \"wooden_pickaxe\", 1);\n\n  // Step 4: Go back to the chest and deposit the wooden pickaxe\n  await depositItemIntoChest(bot, chestPosition, {\n    \"wooden_pickaxe\": 1\n  });\n}"}, "gatherAndStoreCobblestone": {"executable_code": "async function gatherAndStoreCobblestone(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const pickaxeName = \"wooden_pickaxe\";\n  const cobblestoneName = \"cobblestone\";\n  const cobblestoneCount = 8;\n\n  // Open the chest and take out the wooden pickaxe\n  await getItemFromChest(bot, chestPosition, {\n    [pickaxeName]: 1\n  });\n\n  // Equip the wooden pickaxe\n  const pickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[pickaxeName].id);\n  await bot.equip(pickaxe, \"hand\");\n\n  // Mine 8 cobblestone blocks\n  await mineBlock(bot, cobblestoneName, cobblestoneCount);\n\n  // Open the chest and deposit the 8 cobblestone blocks\n  await depositItemIntoChest(bot, chestPosition, {\n    [cobblestoneName]: cobblestoneCount\n  });\n\n  // Deposit the wooden pickaxe back into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    [pickaxeName]: 1\n  });\n}\nawait gatherAndStoreCobblestone(bot);", "code": "async function gatherAndStoreCobblestone(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const pickaxeName = \"wooden_pickaxe\";\n  const cobblestoneName = \"cobblestone\";\n  const cobblestoneCount = 8;\n\n  // Open the chest and take out the wooden pickaxe\n  await getItemFromChest(bot, chestPosition, {\n    [pickaxeName]: 1\n  });\n\n  // Equip the wooden pickaxe\n  const pickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[pickaxeName].id);\n  await bot.equip(pickaxe, \"hand\");\n\n  // Mine 8 cobblestone blocks\n  await mineBlock(bot, cobblestoneName, cobblestoneCount);\n\n  // Open the chest and deposit the 8 cobblestone blocks\n  await depositItemIntoChest(bot, chestPosition, {\n    [cobblestoneName]: cobblestoneCount\n  });\n\n  // Deposit the wooden pickaxe back into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    [pickaxeName]: 1\n  });\n}"}, "craftAndPlaceFurnace": {"executable_code": "async function craftAndPlaceFurnace(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  }).position;\n  const furnacePosition = chestPosition.offset(1, 0, 0);\n\n  // Move to the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n\n  // Open the chest and withdraw 8 cobblestones\n  await getItemFromChest(bot, chestPosition, {\n    \"cobblestone\": 8\n  });\n\n  // Move to the crafting table\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTablePosition.x, craftingTablePosition.y, craftingTablePosition.z));\n\n  // Craft a furnace\n  await craftItem(bot, \"furnace\", 1);\n\n  // Move to the position 1 block right to the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(furnacePosition.x, furnacePosition.y, furnacePosition.z));\n\n  // Place the furnace\n  await placeItem(bot, \"furnace\", furnacePosition);\n}\nawait craftAndPlaceFurnace(bot);", "code": "async function craftAndPlaceFurnace(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  }).position;\n  const furnacePosition = chestPosition.offset(1, 0, 0);\n\n  // Move to the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n\n  // Open the chest and withdraw 8 cobblestones\n  await getItemFromChest(bot, chestPosition, {\n    \"cobblestone\": 8\n  });\n\n  // Move to the crafting table\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTablePosition.x, craftingTablePosition.y, craftingTablePosition.z));\n\n  // Craft a furnace\n  await craftItem(bot, \"furnace\", 1);\n\n  // Move to the position 1 block right to the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(furnacePosition.x, furnacePosition.y, furnacePosition.z));\n\n  // Place the furnace\n  await placeItem(bot, \"furnace\", furnacePosition);\n}"}, "craftAndStoreWoodenSword": {"executable_code": "async function craftAndStoreWoodenSword(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const itemsToGet = {\n    \"oak_planks\": 2,\n    \"stick\": 1\n  };\n\n  // Move to the chest and withdraw the required items\n  await getItemFromChest(bot, chestPosition, itemsToGet);\n\n  // Find the crafting table and move to it\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTable.position.x, craftingTable.position.y, craftingTable.position.z));\n\n  // Craft the wooden sword\n  await craftItem(bot, \"wooden_sword\", 1);\n\n  // Move back to the chest and deposit the wooden sword\n  const itemsToDeposit = {\n    \"wooden_sword\": 1\n  };\n  await depositItemIntoChest(bot, chestPosition, itemsToDeposit);\n  bot.chat(\"Task completed: Crafted a wooden sword and stored it in the chest.\");\n}\nawait craftAndStoreWoodenSword(bot);", "code": "async function craftAndStoreWoodenSword(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const itemsToGet = {\n    \"oak_planks\": 2,\n    \"stick\": 1\n  };\n\n  // Move to the chest and withdraw the required items\n  await getItemFromChest(bot, chestPosition, itemsToGet);\n\n  // Find the crafting table and move to it\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTable.position.x, craftingTable.position.y, craftingTable.position.z));\n\n  // Craft the wooden sword\n  await craftItem(bot, \"wooden_sword\", 1);\n\n  // Move back to the chest and deposit the wooden sword\n  const itemsToDeposit = {\n    \"wooden_sword\": 1\n  };\n  await depositItemIntoChest(bot, chestPosition, itemsToDeposit);\n  bot.chat(\"Task completed: Crafted a wooden sword and stored it in the chest.\");\n}"}, "killPigAndReturnSword": {"code": "async function killPigAndReturnSword(bot) {\n  // Get the wooden sword from the chest\n  await getItemFromChest(bot, new Vec3(-14, -60, 2), {\n    \"wooden_sword\": 1\n  });\n\n  // Equip the wooden sword\n  const sword = bot.inventory.findInventoryItem(mcData.itemsByName[\"wooden_sword\"].id);\n  await bot.equip(sword, \"hand\");\n\n  // Kill the pig\n  await killMob(bot, \"pig\", 60);\n\n  // Place the wooden sword back in the chest\n  await depositItemIntoChest(bot, new Vec3(-14, -60, 2), {\n    \"wooden_sword\": 1\n  });\n}", "executable_code": "async function killPigAndReturnSword(bot) {\n  // Get the wooden sword from the chest\n  await getItemFromChest(bot, new Vec3(-14, -60, 2), {\n    \"wooden_sword\": 1\n  });\n\n  // Equip the wooden sword\n  const sword = bot.inventory.findInventoryItem(mcData.itemsByName[\"wooden_sword\"].id);\n  await bot.equip(sword, \"hand\");\n\n  // Kill the pig\n  await killMob(bot, \"pig\", 60);\n\n  // Place the wooden sword back in the chest\n  await depositItemIntoChest(bot, new Vec3(-14, -60, 2), {\n    \"wooden_sword\": 1\n  });\n}\nawait killPigAndReturnSword(bot);"}, "gatherAndDepositPorkchop": {"code": "async function gatherAndDepositPorkchop(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const porkchop = bot.inventory.findInventoryItem(mcData.itemsByName[\"porkchop\"].id);\n  if (porkchop) {\n    // Deposit the porkchop into the chest\n    await depositItemIntoChest(bot, chestPosition, {\n      \"porkchop\": 1\n    });\n    bot.chat(\"Task completed. Porkchop deposited in the chest.\");\n  } else {\n    // Find a pig and kill it to get a porkchop\n    let pig = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const pig = bot.nearestEntity(entity => {\n        return entity.name === \"pig\" && entity.position.distanceTo(bot.entity.position) < 32;\n      });\n      return pig;\n    });\n    if (pig) {\n      await bot.attack(pig, true);\n      bot.chat(\"Pig killed. Got a porkchop.\");\n      // Deposit the porkchop into the chest\n      await depositItemIntoChest(bot, chestPosition, {\n        \"porkchop\": 1\n      });\n      bot.chat(\"Task completed. Porkchop deposited in the chest.\");\n    } else {\n      bot.chat(\"No pig found. Task failed.\");\n    }\n  }\n}", "executable_code": "async function gatherAndDepositPorkchop(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const porkchop = bot.inventory.findInventoryItem(mcData.itemsByName[\"porkchop\"].id);\n  if (porkchop) {\n    // Deposit the porkchop into the chest\n    await depositItemIntoChest(bot, chestPosition, {\n      \"porkchop\": 1\n    });\n    bot.chat(\"Task completed. Porkchop deposited in the chest.\");\n  } else {\n    // Find a pig and kill it to get a porkchop\n    let pig = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const pig = bot.nearestEntity(entity => {\n        return entity.name === \"pig\" && entity.position.distanceTo(bot.entity.position) < 32;\n      });\n      return pig;\n    });\n    if (pig) {\n      await bot.attack(pig, true);\n      bot.chat(\"Pig killed. Got a porkchop.\");\n      // Deposit the porkchop into the chest\n      await depositItemIntoChest(bot, chestPosition, {\n        \"porkchop\": 1\n      });\n      bot.chat(\"Task completed. Porkchop deposited in the chest.\");\n    } else {\n      bot.chat(\"No pig found. Task failed.\");\n    }\n  }\n}\nawait gatherAndDepositPorkchop(bot);"}, "smeltPorkchopAndPlaceInChest": {"code": "async function smeltPorkchopAndPlaceInChest(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const furnacePosition = bot.findBlock({\n    matching: mcData.blocksByName.furnace.id,\n    maxDistance: 32\n  }).position;\n\n  // Step 1: Get raw porkchop and wood plank from chest\n  await getItemFromChest(bot, chestPosition, {\n    \"porkchop\": 1,\n    \"oak_planks\": 1\n  });\n\n  // Step 2: Smelt raw porkchop into cooked porkchop\n  await smeltItem(bot, \"porkchop\", \"oak_planks\");\n\n  // Step 3: Deposit cooked porkchop into chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"cooked_porkchop\": 1\n  });\n}", "executable_code": "async function smeltPorkchopAndPlaceInChest(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const furnacePosition = bot.findBlock({\n    matching: mcData.blocksByName.furnace.id,\n    maxDistance: 32\n  }).position;\n\n  // Step 1: Get raw porkchop and wood plank from chest\n  await getItemFromChest(bot, chestPosition, {\n    \"porkchop\": 1,\n    \"oak_planks\": 1\n  });\n\n  // Step 2: Smelt raw porkchop into cooked porkchop\n  await smeltItem(bot, \"porkchop\", \"oak_planks\");\n\n  // Step 3: Deposit cooked porkchop into chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"cooked_porkchop\": 1\n  });\n}\nawait smeltPorkchopAndPlaceInChest(bot);"}}