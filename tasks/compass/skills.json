{
    "gatherAndStoreWood": {
        "executable_code": "async function gatherAndStoreWood(bot) {\n  // Find the chest and remember its position\n  const chestPosition = new Vec3(-14, -60, 2);\n  bot.chat(\"Chest found at \" + chestPosition);\n\n  // Find and mine 5 oak logs\n  bot.chat(\"Starting to gather wood...\");\n  await mineBlock(bot, \"oak_log\", 5);\n  bot.chat(\"Wood gathering completed.\");\n\n  // Go back to the chest and deposit the 5 oak logs\n  bot.chat(\"Going back to the chest...\");\n  await depositItemIntoChest(bot, chestPosition, {\n    \"oak_log\": 5\n  });\n  bot.chat(\"Wood deposited in the chest.\");\n}\nawait gatherAndStoreWood(bot);",
        "code": "async function gatherAndStoreWood(bot) {\n  // Find the chest and remember its position\n  const chestPosition = new Vec3(-14, -60, 2);\n  bot.chat(\"Chest found at \" + chestPosition);\n\n  // Find and mine 5 oak logs\n  bot.chat(\"Starting to gather wood...\");\n  await mineBlock(bot, \"oak_log\", 5);\n  bot.chat(\"Wood gathering completed.\");\n\n  // Go back to the chest and deposit the 5 oak logs\n  bot.chat(\"Going back to the chest...\");\n  await depositItemIntoChest(bot, chestPosition, {\n    \"oak_log\": 5\n  });\n  bot.chat(\"Wood deposited in the chest.\");\n}"
    },
    "craftAndStorePlanks": {
        "executable_code": "async function craftAndStorePlanks(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  // Step 1: Move to the chest and take 5 oak logs\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_log\": 5\n  });\n  bot.chat(\"Got 5 oak logs from the chest.\");\n\n  // Step 2: Craft 20 oak planks from the oak logs\n  await craftItem(bot, \"oak_planks\", 5);\n  bot.chat(\"Crafted 20 oak planks.\");\n\n  // Step 3: Move to the chest and deposit the 20 oak planks\n  await depositItemIntoChest(bot, chestPosition, {\n    \"oak_planks\": 20\n  });\n  bot.chat(\"Deposited 20 oak planks into the chest.\");\n}\nawait craftAndStorePlanks(bot);",
        "code": "async function craftAndStorePlanks(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  // Step 1: Move to the chest and take 5 oak logs\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_log\": 5\n  });\n  bot.chat(\"Got 5 oak logs from the chest.\");\n\n  // Step 2: Craft 20 oak planks from the oak logs\n  await craftItem(bot, \"oak_planks\", 5);\n  bot.chat(\"Crafted 20 oak planks.\");\n\n  // Step 3: Move to the chest and deposit the 20 oak planks\n  await depositItemIntoChest(bot, chestPosition, {\n    \"oak_planks\": 20\n  });\n  bot.chat(\"Deposited 20 oak planks into the chest.\");\n}"
    },
    "craftAndStoreSticks": {
        "executable_code": "async function craftAndStoreSticks(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  // Step 1: Move to the chest and take 4 oak planks\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_planks\": 4\n  });\n  // Step 2: Craft 8 sticks using the oak planks\n  await craftItem(bot, \"stick\", 2);\n  // Step 3: Deposit the 8 sticks into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"stick\": 8\n  });\n}\nawait craftAndStoreSticks(bot);",
        "code": "async function craftAndStoreSticks(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  // Step 1: Move to the chest and take 4 oak planks\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_planks\": 4\n  });\n  // Step 2: Craft 8 sticks using the oak planks\n  await craftItem(bot, \"stick\", 2);\n  // Step 3: Deposit the 8 sticks into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"stick\": 8\n  });\n}"
    },
    "craftAndPlaceCraftingTable": {
        "executable_code": "async function craftAndPlaceCraftingTable(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = chestPosition.offset(-1, 0, 0);\n\n  // Move to the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n\n  // Open the chest and withdraw 4 oak planks\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_planks\": 4\n  });\n\n  // Craft a crafting table\n  await craftItem(bot, \"crafting_table\", 1);\n\n  // Move to the position 1 block left of the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTablePosition.x, craftingTablePosition.y, craftingTablePosition.z));\n\n  // Place the crafting table on the ground\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n}\nawait craftAndPlaceCraftingTable(bot);",
        "code": "async function craftAndPlaceCraftingTable(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = chestPosition.offset(-1, 0, 0);\n\n  // Move to the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(chestPosition.x, chestPosition.y, chestPosition.z));\n\n  // Open the chest and withdraw 4 oak planks\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_planks\": 4\n  });\n\n  // Craft a crafting table\n  await craftItem(bot, \"crafting_table\", 1);\n\n  // Move to the position 1 block left of the chest\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTablePosition.x, craftingTablePosition.y, craftingTablePosition.z));\n\n  // Place the crafting table on the ground\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n}"
    },
    "craftAndStoreWoodenPickaxe": {
        "executable_code": "async function craftAndStoreWoodenPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const itemsToGet = {\n    \"oak_planks\": 3,\n    \"stick\": 2\n  };\n\n  // Move to the chest and withdraw the required items\n  await getItemFromChest(bot, chestPosition, itemsToGet);\n\n  // Craft the wooden pickaxe\n  await craftItem(bot, \"wooden_pickaxe\", 1);\n\n  // Move back to the chest and deposit the wooden pickaxe\n  const itemsToDeposit = {\n    \"wooden_pickaxe\": 1\n  };\n  await depositItemIntoChest(bot, chestPosition, itemsToDeposit);\n}\nawait craftAndStoreWoodenPickaxe(bot);",
        "code": "async function craftAndStoreWoodenPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const itemsToGet = {\n    \"oak_planks\": 3,\n    \"stick\": 2\n  };\n\n  // Move to the chest and withdraw the required items\n  await getItemFromChest(bot, chestPosition, itemsToGet);\n\n  // Craft the wooden pickaxe\n  await craftItem(bot, \"wooden_pickaxe\", 1);\n\n  // Move back to the chest and deposit the wooden pickaxe\n  const itemsToDeposit = {\n    \"wooden_pickaxe\": 1\n  };\n  await depositItemIntoChest(bot, chestPosition, itemsToDeposit);\n}"
    },
    "gatherAndStoreCobblestone": {
        "executable_code": "async function gatherAndStoreCobblestone(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const pickaxeName = 'wooden_pickaxe';\n  const cobblestoneName = 'cobblestone';\n  const cobblestoneCount = 11;\n\n  // Open the chest and take out the wooden pickaxe\n  await getItemFromChest(bot, chestPosition, {\n    [pickaxeName]: 1\n  });\n\n  // Equip the wooden pickaxe\n  const pickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[pickaxeName].id);\n  await bot.equip(pickaxe, 'hand');\n\n  // Find and mine 11 cobblestone blocks\n  await mineBlock(bot, cobblestoneName, cobblestoneCount);\n\n  // Open the chest and deposit the 11 cobblestone\n  await depositItemIntoChest(bot, chestPosition, {\n    [cobblestoneName]: cobblestoneCount\n  });\n\n  // Deposit the wooden pickaxe back into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    [pickaxeName]: 1\n  });\n}\nawait gatherAndStoreCobblestone(bot);",
        "code": "async function gatherAndStoreCobblestone(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const pickaxeName = 'wooden_pickaxe';\n  const cobblestoneName = 'cobblestone';\n  const cobblestoneCount = 11;\n\n  // Open the chest and take out the wooden pickaxe\n  await getItemFromChest(bot, chestPosition, {\n    [pickaxeName]: 1\n  });\n\n  // Equip the wooden pickaxe\n  const pickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[pickaxeName].id);\n  await bot.equip(pickaxe, 'hand');\n\n  // Find and mine 11 cobblestone blocks\n  await mineBlock(bot, cobblestoneName, cobblestoneCount);\n\n  // Open the chest and deposit the 11 cobblestone\n  await depositItemIntoChest(bot, chestPosition, {\n    [cobblestoneName]: cobblestoneCount\n  });\n\n  // Deposit the wooden pickaxe back into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    [pickaxeName]: 1\n  });\n}"
    },
    "craftAndStoreStonePickaxe": {
        "executable_code": "async function craftAndStoreStonePickaxe(bot) {\n  // Define the chest position\n  const chestPosition = new Vec3(-14, -60, 2);\n\n  // Check if there is a crafting table nearby\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n\n  // If there is no crafting table, craft one\n  if (!craftingTable) {\n    await getItemFromChest(bot, chestPosition, {\n      \"oak_planks\": 4\n    });\n    await craftItem(bot, \"crafting_table\", 1);\n    await placeItem(bot, \"crafting_table\", bot.entity.position.offset(1, 0, 0));\n  }\n\n  // Check if there are enough materials in the inventory\n  const cobblestoneInInventory = bot.inventory.findInventoryItem(mcData.itemsByName[\"cobblestone\"].id);\n  const stickInInventory = bot.inventory.findInventoryItem(mcData.itemsByName[\"stick\"].id);\n\n  // If there are not enough materials, take them from the chest\n  if (!cobblestoneInInventory || cobblestoneInInventory.count < 3) {\n    await getItemFromChest(bot, chestPosition, {\n      \"cobblestone\": 3 - (cobblestoneInInventory ? cobblestoneInInventory.count : 0)\n    });\n  }\n  if (!stickInInventory || stickInInventory.count < 2) {\n    await getItemFromChest(bot, chestPosition, {\n      \"stick\": 2 - (stickInInventory ? stickInInventory.count : 0)\n    });\n  }\n\n  // Craft a stone pickaxe\n  await craftItem(bot, \"stone_pickaxe\", 1);\n\n  // Deposit the stone pickaxe into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"stone_pickaxe\": 1\n  });\n}\nawait craftAndStoreStonePickaxe(bot);",
        "code": "async function craftAndStoreStonePickaxe(bot) {\n  // Define the chest position\n  const chestPosition = new Vec3(-14, -60, 2);\n\n  // Check if there is a crafting table nearby\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n\n  // If there is no crafting table, craft one\n  if (!craftingTable) {\n    await getItemFromChest(bot, chestPosition, {\n      \"oak_planks\": 4\n    });\n    await craftItem(bot, \"crafting_table\", 1);\n    await placeItem(bot, \"crafting_table\", bot.entity.position.offset(1, 0, 0));\n  }\n\n  // Check if there are enough materials in the inventory\n  const cobblestoneInInventory = bot.inventory.findInventoryItem(mcData.itemsByName[\"cobblestone\"].id);\n  const stickInInventory = bot.inventory.findInventoryItem(mcData.itemsByName[\"stick\"].id);\n\n  // If there are not enough materials, take them from the chest\n  if (!cobblestoneInInventory || cobblestoneInInventory.count < 3) {\n    await getItemFromChest(bot, chestPosition, {\n      \"cobblestone\": 3 - (cobblestoneInInventory ? cobblestoneInInventory.count : 0)\n    });\n  }\n  if (!stickInInventory || stickInInventory.count < 2) {\n    await getItemFromChest(bot, chestPosition, {\n      \"stick\": 2 - (stickInInventory ? stickInInventory.count : 0)\n    });\n  }\n\n  // Craft a stone pickaxe\n  await craftItem(bot, \"stone_pickaxe\", 1);\n\n  // Deposit the stone pickaxe into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"stone_pickaxe\": 1\n  });\n}"
    },
    "gatherIronAndReturnPickaxe": {
        "code": "async function gatherIronAndReturnPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const ironOreCount = 7;\n\n  // Open the chest and take out the stone pickaxe\n  await getItemFromChest(bot, chestPosition, {\n    \"stone_pickaxe\": 1\n  });\n\n  // Equip the stone pickaxe\n  const stonePickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[\"stone_pickaxe\"].id);\n  await bot.equip(stonePickaxe, \"hand\");\n\n  // Find and mine 7 iron ores\n  await mineBlock(bot, \"iron_ore\", ironOreCount);\n\n  // Open the chest and deposit the 7 iron ores\n  await depositItemIntoChest(bot, chestPosition, {\n    \"iron_ore\": ironOreCount\n  });\n\n  // Deposit the stone pickaxe back into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"stone_pickaxe\": 1\n  });\n}",
        "executable_code": "async function gatherIronAndReturnPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const ironOreCount = 7;\n\n  // Open the chest and take out the stone pickaxe\n  await getItemFromChest(bot, chestPosition, {\n    \"stone_pickaxe\": 1\n  });\n\n  // Equip the stone pickaxe\n  const stonePickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[\"stone_pickaxe\"].id);\n  await bot.equip(stonePickaxe, \"hand\");\n\n  // Find and mine 7 iron ores\n  await mineBlock(bot, \"iron_ore\", ironOreCount);\n\n  // Open the chest and deposit the 7 iron ores\n  await depositItemIntoChest(bot, chestPosition, {\n    \"iron_ore\": ironOreCount\n  });\n\n  // Deposit the stone pickaxe back into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"stone_pickaxe\": 1\n  });\n}\nawait gatherIronAndReturnPickaxe(bot);"
    },
    "craftAndPlaceFurnace": {
        "executable_code": "async function craftAndPlaceFurnace(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  }).position;\n  const furnacePosition = chestPosition.offset(1, 0, 0);\n\n  // Step 1: Go to the chest and take 8 cobblestones\n  await getItemFromChest(bot, chestPosition, {\n    \"cobblestone\": 8\n  });\n\n  // Step 2: Go to the crafting table and craft a furnace\n  await craftItem(bot, \"furnace\", 1);\n\n  // Step 3: Place the furnace on the ground 1 block right to the chest\n  await placeItem(bot, \"furnace\", furnacePosition);\n}\nawait craftAndPlaceFurnace(bot);",
        "code": "async function craftAndPlaceFurnace(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  }).position;\n  const furnacePosition = chestPosition.offset(1, 0, 0);\n\n  // Step 1: Go to the chest and take 8 cobblestones\n  await getItemFromChest(bot, chestPosition, {\n    \"cobblestone\": 8\n  });\n\n  // Step 2: Go to the crafting table and craft a furnace\n  await craftItem(bot, \"furnace\", 1);\n\n  // Step 3: Place the furnace on the ground 1 block right to the chest\n  await placeItem(bot, \"furnace\", furnacePosition);\n}"
    },
    "smeltIronAndStore": {
        "code": "async function smeltIronAndStore(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const furnacePosition = bot.findBlock({\n    matching: mcData.blocksByName.furnace.id,\n    maxDistance: 32\n  }).position;\n\n  // Step 1: Go to the chest and take 7 oak planks\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_planks\": 7\n  });\n\n  // Step 2: Go to the furnace\n  await bot.pathfinder.goto(new GoalGetToBlock(furnacePosition.x, furnacePosition.y, furnacePosition.z));\n\n  // Step 3: Smelt 7 raw iron into iron ingots using the oak planks as fuel\n  await smeltItem(bot, \"raw_iron\", \"oak_planks\", 7);\n\n  // Step 4: Go back to the chest and deposit the 7 iron ingots\n  await depositItemIntoChest(bot, chestPosition, {\n    \"iron_ingot\": 7\n  });\n}",
        "executable_code": "async function smeltIronAndStore(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const furnacePosition = bot.findBlock({\n    matching: mcData.blocksByName.furnace.id,\n    maxDistance: 32\n  }).position;\n\n  // Step 1: Go to the chest and take 7 oak planks\n  await getItemFromChest(bot, chestPosition, {\n    \"oak_planks\": 7\n  });\n\n  // Step 2: Go to the furnace\n  await bot.pathfinder.goto(new GoalGetToBlock(furnacePosition.x, furnacePosition.y, furnacePosition.z));\n\n  // Step 3: Smelt 7 raw iron into iron ingots using the oak planks as fuel\n  await smeltItem(bot, \"raw_iron\", \"oak_planks\", 7);\n\n  // Step 4: Go back to the chest and deposit the 7 iron ingots\n  await depositItemIntoChest(bot, chestPosition, {\n    \"iron_ingot\": 7\n  });\n}\nawait smeltIronAndStore(bot);"
    },
    "craftAndStoreIronPickaxe": {
        "code": "async function craftAndStoreIronPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const itemsToGet = {\n    \"iron_ingot\": 3,\n    \"stick\": 2\n  };\n  await getItemFromChest(bot, chestPosition, itemsToGet);\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTable.position.x, craftingTable.position.y, craftingTable.position.z));\n  await craftItem(bot, \"iron_pickaxe\", 1);\n  const itemsToDeposit = {\n    \"iron_pickaxe\": 1\n  };\n  await depositItemIntoChest(bot, chestPosition, itemsToDeposit);\n}",
        "executable_code": "async function craftAndStoreIronPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const itemsToGet = {\n    \"iron_ingot\": 3,\n    \"stick\": 2\n  };\n  await getItemFromChest(bot, chestPosition, itemsToGet);\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTable.position.x, craftingTable.position.y, craftingTable.position.z));\n  await craftItem(bot, \"iron_pickaxe\", 1);\n  const itemsToDeposit = {\n    \"iron_pickaxe\": 1\n  };\n  await depositItemIntoChest(bot, chestPosition, itemsToDeposit);\n}\nawait craftAndStoreIronPickaxe(bot);"
    },
    "gatherRedstoneAndReturnPickaxe": {
        "code": "async function gatherRedstoneAndReturnPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const redstoneOre = bot.findBlock({\n    matching: mcData.blocksByName[\"redstone_ore\"].id,\n    maxDistance: 32\n  });\n\n  // Open the chest and take the iron pickaxe\n  await getItemFromChest(bot, chestPosition, {\n    \"iron_pickaxe\": 1\n  });\n\n  // Equip the iron pickaxe\n  const ironPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[\"iron_pickaxe\"].id);\n  await bot.equip(ironPickaxe, \"hand\");\n\n  // Mine the redstone ore block\n  await mineBlock(bot, \"redstone_ore\", 1);\n\n  // Open the chest and deposit the redstone dust\n  await depositItemIntoChest(bot, chestPosition, {\n    \"redstone_dust\": 1\n  });\n\n  // Deposit the iron pickaxe back into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"iron_pickaxe\": 1\n  });\n}",
        "executable_code": "async function gatherRedstoneAndReturnPickaxe(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const redstoneOre = bot.findBlock({\n    matching: mcData.blocksByName[\"redstone_ore\"].id,\n    maxDistance: 32\n  });\n\n  // Open the chest and take the iron pickaxe\n  await getItemFromChest(bot, chestPosition, {\n    \"iron_pickaxe\": 1\n  });\n\n  // Equip the iron pickaxe\n  const ironPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[\"iron_pickaxe\"].id);\n  await bot.equip(ironPickaxe, \"hand\");\n\n  // Mine the redstone ore block\n  await mineBlock(bot, \"redstone_ore\", 1);\n\n  // Open the chest and deposit the redstone dust\n  await depositItemIntoChest(bot, chestPosition, {\n    \"redstone_dust\": 1\n  });\n\n  // Deposit the iron pickaxe back into the chest\n  await depositItemIntoChest(bot, chestPosition, {\n    \"iron_pickaxe\": 1\n  });\n}\nawait gatherRedstoneAndReturnPickaxe(bot);"
    },
    "craftAndStoreCompass": {
        "code": "async function craftAndStoreCompass(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  }).position;\n\n  // Step 1: Go to the chest and take 4 iron ingots\n  await getItemFromChest(bot, chestPosition, {\n    \"iron_ingot\": 4\n  });\n\n  // Step 2: Go to the crafting table\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTablePosition.x, craftingTablePosition.y, craftingTablePosition.z));\n\n  // Step 3: Craft a compass using 4 iron ingots and 1 redstone dust\n  await craftItem(bot, \"compass\", 1);\n\n  // Step 4: Go back to the chest and deposit the compass\n  await depositItemIntoChest(bot, chestPosition, {\n    \"compass\": 1\n  });\n  bot.chat(\"Task completed: Crafted a compass and stored it in the chest.\");\n}",
        "executable_code": "async function craftAndStoreCompass(bot) {\n  const chestPosition = new Vec3(-14, -60, 2);\n  const craftingTablePosition = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  }).position;\n\n  // Step 1: Go to the chest and take 4 iron ingots\n  await getItemFromChest(bot, chestPosition, {\n    \"iron_ingot\": 4\n  });\n\n  // Step 2: Go to the crafting table\n  await bot.pathfinder.goto(new GoalGetToBlock(craftingTablePosition.x, craftingTablePosition.y, craftingTablePosition.z));\n\n  // Step 3: Craft a compass using 4 iron ingots and 1 redstone dust\n  await craftItem(bot, \"compass\", 1);\n\n  // Step 4: Go back to the chest and deposit the compass\n  await depositItemIntoChest(bot, chestPosition, {\n    \"compass\": 1\n  });\n  bot.chat(\"Task completed: Crafted a compass and stored it in the chest.\");\n}\nawait craftAndStoreCompass(bot);"
    }
}